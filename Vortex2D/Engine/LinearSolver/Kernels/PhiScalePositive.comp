#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}consts;

layout(binding = 0, r32f) uniform image2D FineLevelSet;
layout(binding = 1, r32f) uniform image2D CoarseLevelSet;

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy; // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x < consts.width && pos.y < consts.height)
  {
    ivec2 finePos = pos * ivec2(2);

    float pp = 0.0;
    float pn = 0.0;
    float count = 0.0;
    float v;

    v = imageLoad(FineLevelSet, finePos).x;
    if (v >= 0.0)
    {
      pp += v;
      count += 1.0; 
    }
    else
    {
      pn += v;
    }

    v = imageLoad(FineLevelSet, finePos + ivec2(1, 0)).x;
    if (v >= 0.0)
    {
      pp += v;
      count += 1.0; 
    }
    else
    {
      pn += v;
    }

    v = imageLoad(FineLevelSet, finePos + ivec2(0, 1)).x;
    if (v >= 0.0)
    {
      pp += v;
      count += 1.0; 
    }
    else
    {
      pn += v;
    }

    v = imageLoad(FineLevelSet, finePos + ivec2(1, 1)).x;
    if (v >= 0.0)
    {
      pp += v;
      count += 1.0; 
    }
    else
    {
      pn += v;
    }

    if (count == 0.0)
    {
      imageStore(CoarseLevelSet, pos, vec4(0.5 * pn / 4.0, 0.0, 0.0, 0.0));
    }
    else
    {
      imageStore(CoarseLevelSet, pos, vec4(0.5 * pp / count, 0.0, 0.0, 0.0));
    }
  }
}
